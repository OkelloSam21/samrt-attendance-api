name: Build & Deploy Ktor Backend to Railway

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java environment for Ktor
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # Step 3: Build only the shadowJar (creates a single jar with dependencies)
      - name: Build Shadow JAR
        run: ./gradlew shadowJar

      # Step 4: Check the JAR file size and location
      - name: Verify JAR file location and size
        run: |
          find . -name "*.jar" | sort
          ls -la build/libs/
          echo "JAR file size in MB:"
          du -h build/libs/*.jar

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: docker build -t ktor-backend:latest .

      # Step 6: Install Railway CLI
      - name: Install Railway CLI
        run: curl -fsSL https://railway.app/install.sh | sh

      # Step 7: Add Railway to PATH
      - name: Add Railway to PATH
        run: echo "$HOME/.railway/bin" >> $GITHUB_PATH

      # Step 8: Deploy to Railway with retry mechanism
      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: 14e8bb3c-1a4a-40db-bb52-da85fd4d9f90
        run: |
          # Retry mechanism for deployment
          for i in {1..3}; do
            railway up --service samrt-attendance-api --detach && break || sleep 10
          done